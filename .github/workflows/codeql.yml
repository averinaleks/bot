name: CodeQL

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Purge Git reference logs that look like Python modules
        run: |
          # CodeQL interprets any file ending in .py as Python source. Git keeps
          # reference logs for remote branches inside .git/logs/, and branch
          # names that end with ".py" therefore look like legitimate modules to
          # the extractor even though the files are plaintext Git logs. When a
          # workflow fetches the entire history (fetch-depth: 0), those logs are
          # recreated and CodeQL tries to parse them, triggering hundreds of
          # syntax errors. Removing the logs entirely is safe (Git will recreate
          # them on demand) and guarantees the extractor never sees them.
          # Disable creation of new reference logs for the remainder of the job.
          # Without this, subsequent fetch operations performed by actions can
          # silently recreate .git/logs and reintroduce the parsing problem.
          git config --global core.logAllRefUpdates false
          if [ -d ".git/logs" ]; then
            rm -rf .git/logs
          fi
          # Some actions (such as caching or submodules) can leave additional
          # .git directories behind, so sweep the whole workspace just in case
          # and remove any stray log directories those actions may have left.
          find "$PWD" -path '*/.git/logs' -type d -prune -exec rm -rf {} +
          # A few hosted runners have shown that fetch operations performed by
          # subsequent steps can still recreate reference logs for remote
          # branches whose names end in .py. Those branches do not contain source
          # code needed for analysis, so drop the local references entirely to
          # prevent Git from regenerating the problematic logs.
          git for-each-ref --format='%(refname)' 'refs/remotes/*' | \
            awk '/\.py$/ { print }' | while read -r ref; do
              git update-ref -d "$ref"
            done
          # In the unlikely event that any .py files remain in Git metadata
          # (for example, because another action created fresh logs after the
          # loop above ran), delete them so the extractor never attempts to
          # parse the plaintext Git data as Python modules.
          find "$PWD" -path '*/.git/logs/*' -type f -name '*.py' -delete
          # Finally, prune any other Python-looking artifacts that may lurk in
          # the Git metadata directory. Some hosted runners have surprised us
          # by creating temporary worktrees or fetch mirrors whose refnames end
          # with .py. Those references do not correspond to source files the
          # analyzer needs, and leaving them behind risks resurfacing the
          # original parse errors. A blanket sweep across the remaining Git
          # metadata is inexpensive and guarantees CodeQL never inspects those
          # plaintext blobs as if they were Python modules.
          find "$PWD" -path '*/.git/*' -type f -name '*.py' -delete

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: requirements-ci.txt

      - name: Initialize CodeQL
        uses: github/codeql-action/init@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3.30.6
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql/codeql-config.yml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-ci.txt

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3.30.6
        with:
          category: "/language:${{ matrix.language }}"
