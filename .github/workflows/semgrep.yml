# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow file requires a free account on Semgrep.dev to
# manage rules, file ignores, notifications, and more.
#
# See https://semgrep.dev/docs

name: Semgrep

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '42 12 * * 4'

permissions:
  contents: read
  packages: read

jobs:
  semgrep:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      packages: read # required to pull the Semgrep action container image from GHCR
    name: Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v5
        with:
          python-version: "3.x"
      - name: Install Semgrep CLI
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          set -euo pipefail

          retry() {
            local attempts=$1
            shift
            for attempt in $(seq 1 "${attempts}"); do
              if "$@"; then
                return 0
              fi
              if [ "${attempt}" -eq "${attempts}" ]; then
                echo "Command failed after ${attempts} attempts: $*" >&2
                return 1
              fi
              sleep $((attempt * 5))
            done
          }

          retry 3 python -m pip install --upgrade pip
          retry 3 python -m pip install "semgrep>=1.52.0"

          user_bin="$(python -m site --user-base)/bin"
          if [ -d "${user_bin}" ]; then
            echo "${user_bin}" >> "${GITHUB_PATH}"
          fi
      - name: Run Semgrep
        id: run_semgrep
        env:
          SEMGREP_SEND_METRICS: "off"
        continue-on-error: true
        run: |
          set -euo pipefail
          rm -f semgrep.sarif

          for attempt in 1 2 3; do
            if semgrep --config p/ci --error --sarif --output semgrep.sarif; then
              break
            fi

            if [ "${attempt}" -eq 3 ]; then
              echo "Semgrep scan failed after ${attempt} attempts" >&2
              exit 1
            fi

            echo "Semgrep scan failed (attempt ${attempt}); retrying after backoff" >&2
            sleep $((attempt * 10))
          done
      - name: Ensure SARIF report exists
        run: python scripts/ensure_semgrep_sarif.py
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Check for SARIF results
        id: sarif_check
        run: |
          if [ -s semgrep.sarif ] && [ "$(jq '[.runs[].results | length] | add' semgrep.sarif)" -gt 0 ]; then
            echo "upload=true" >> "$GITHUB_OUTPUT"
          else
            echo "upload=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@3599b3baa15b485a2e49ef411a7a4bb2452e7f93 # v3.30.5
        if: steps.sarif_check.outputs.upload == 'true'
        with:
          sarif_file: semgrep.sarif
      - name: Fail on Semgrep findings
        if: steps.run_semgrep.outcome == 'failure'
        run: |
          if [ "${{ steps.sarif_check.outputs.upload }}" = "true" ]; then
            echo "Semgrep обнаружил проблемы."
            exit 1
          fi
          echo "Semgrep завершился с ошибкой без результатов."
          exit 1
