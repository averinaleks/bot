name: Build and Push Docker image
permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ "main" ]   # или "master", если у тебя так называется основная ветка
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - file: Dockerfile.cpu
            image: myapp
            artifact: trivy-report-cpu
          - file: Dockerfile.ci
            image: myapp-ci
            artifact: trivy-report-ci
          - file: Dockerfile.gptoss
            image: myapp
            artifact: trivy-report-gptoss
    env:
      DOCKERHUB_USERNAME: ${{ secrets.AVERINALEKS }}
      DOCKERHUB_TOKEN: ${{ secrets.BOT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          path: bot
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        timeout-minutes: 10
        continue-on-error: true
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: true
      - name: Prepare build mount dir
        run: |
          sudo mkdir -p /mnt
          sudo wipefs -a /dev/buildvg/buildlv || true
          sudo rm -rf /mnt/*
      - name: Install LVM
        run: sudo apt-get update && sudo apt-get install -y lvm2
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 4096
          temp-reserve-mb: 100
          swap-size-mb: 4096
          build-mount-path: /mnt
          pv-loop-path: /root-pv.img
          tmp-pv-loop-path: /mnt/tmp-pv.img

      - name: Relocate Docker storage to /mnt
        run: |
          sudo systemctl stop docker
          sudo mv /var/lib/docker /mnt/docker
          sudo ln -s /mnt/docker /var/lib/docker
          sudo systemctl start docker

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Verify /mnt mount
        run: |
          mount | grep '/mnt'
          df -h /mnt
        working-directory: bot

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          load: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Apply security upgrades in built image
        run: |
          docker run --rm ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest bash -lc "apt-get update && apt-get upgrade -y && apt-get clean && rm -rf /var/lib/apt/lists/*"
        working-directory: bot

      - name: Move Docker layer cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        working-directory: bot

      - name: Set up Trivy
        uses: aquasecurity/setup-trivy@v0.2.3
        with:
          version: v0.65.0

      - name: Cleanup before Trivy scan
        run: |
          sudo rm -rf /tmp/* || true
          sudo rm -rf /mnt/trivy-cache || true
          rm -rf ~/.cache/trivy || true
          mkdir -p /mnt/trivy-cache
        working-directory: bot
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.32.0
        env:
          TRIVY_CACHE_DIR: /mnt/trivy-cache
        with:
          version: v0.65.0
          image-ref: ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest
          format: table
          output: bot/${{ matrix.artifact }}.txt
          scanners: vuln

      - name: Show Trivy scan results
        run: cat ${{ matrix.artifact }}.txt
        working-directory: bot

      - name: Upload Trivy report artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: bot/${{ matrix.artifact }}.txt

      - uses: actions/download-artifact@v5
        if: matrix.artifact == 'trivy-report-ci'
        with:
          name: trivy-report-ci
          path: bot
      - name: Cleanup Docker
        run: |
          docker buildx prune -af || true
          docker system prune -af || true
