---
# yamllint disable rule:truthy
name: Release Drafter

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - edited
  workflow_dispatch:

permissions:
  actions: read  # allow downloading pinned Release Drafter action revisions
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: >-
    ${{
      (github.event.pull_request != null &&
        github.event.pull_request.number != null &&
        format(
          'release-drafter-pr-{0}',
          github.event.pull_request.number
        )) ||
      format(
        'release-drafter-ref-{0}',
        github.ref_name ||
        github.ref ||
        github.event.repository.default_branch ||
        github.run_id
      )
    }}
  cancel-in-progress: true

jobs:
  update_release_draft:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Update release draft
        id: release_drafter_initial
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Wait before retrying draft update
        if: >-
          steps.release_drafter_initial.outcome == 'failure'
        run: sleep 15
      - name: Retry release draft update
        if: >-
          steps.release_drafter_initial.outcome == 'failure'
        id: release_drafter_retry
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail if release draft update still failing
        if: >-
          steps.release_drafter_initial.outcome == 'failure' &&
          steps.release_drafter_retry.outcome == 'failure'
        run: |
          echo 'Release Drafter failed twice; aborting.'
          exit 1

  autolabel_pull_request:
    if: >-
      github.event_name == 'pull_request' &&
      github.event.pull_request != null &&
      github.event.pull_request.number != null &&
      github.event.pull_request.head.repo != null &&
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Update pull request metadata
        id: release_drafter_pr_initial
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
          disable-releaser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Wait before retrying metadata update
        if: >-
          steps.release_drafter_pr_initial.outcome == 'failure'
        run: sleep 15
      - name: Retry pull request metadata update
        if: >-
          steps.release_drafter_pr_initial.outcome == 'failure'
        id: release_drafter_pr_retry
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
          disable-releaser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail if pull request metadata update still failing
        if: >-
          steps.release_drafter_pr_initial.outcome == 'failure' &&
          steps.release_drafter_pr_retry.outcome == 'failure'
        run: |
          echo 'Release Drafter metadata update failed twice; aborting.'
          exit 1
