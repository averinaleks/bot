---
# yamllint disable rule:truthy
name: Release Drafter

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - edited
      - labeled
      - unlabeled
      - ready_for_review
  workflow_dispatch:

permissions:
  actions: read  # allow downloading pinned Release Drafter action revisions
  contents: write
  pull-requests: write
  issues: write

env:
  RELEASE_DRAFTER_ACTION_REF: b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # release-drafter v6.1.0 commit

defaults:
  run:
    shell: bash

concurrency:
  group: >-
    ${{
      (github.event.pull_request != null &&
        github.event.pull_request.number != null &&
        format(
          'release-drafter-pr-{0}',
          github.event.pull_request.number
        )) ||
      format(
        'release-drafter-ref-{0}',
        github.ref_name ||
        github.ref ||
        github.event.repository.default_branch ||
        github.run_id
      )
    }}
  cancel-in-progress: true

jobs:
  validate_release_drafter_action:
    if: >-
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4.2.1
        with:
          # Always clone the default branch when running in the
          # ``pull_request_target`` context so that untrusted fork code is
          # never executed.  Explicitly drop the workflow token from the local
          # checkout to prevent unintended pushes when the job runs with
          # elevated write permissions.
          persist-credentials: false
          fetch-depth: 1
          repository: ${{ github.repository }}
          ref: >-
            ${{
              github.event_name == 'pull_request_target'
                && github.event.repository.default_branch
                || github.sha
            }}
      - name: Ensure Release Drafter action ref is consistent
        run: |
          set -euo pipefail
          expected="release-drafter/release-drafter@${RELEASE_DRAFTER_ACTION_REF}"
          mapfile -t refs < <(grep -Eo '^\s*uses:\s*release-drafter/release-drafter@[^ ]+' \
            .github/workflows/release-drafter.yml \
            | sed -E 's/^\s*uses:\s*//' \
            | sort -u \
            || true)
          if [ "${#refs[@]}" -eq 0 ]; then
            echo "Release Drafter action reference not found in workflow." >&2
            exit 1
          fi
          for ref in "${refs[@]}"; do
            if [ "$ref" != "$expected" ]; then
              echo "Unexpected Release Drafter action ref: $ref (expected $expected)" >&2
              exit 1
            fi
          done
      - name: Verify Release Drafter action ref exists upstream
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          auth_header=()
          if [ -n "${GH_TOKEN:-}" ]; then
            auth_header+=("-H" "Authorization: Bearer ${GH_TOKEN}")
          fi
          for attempt in {1..5}; do
            if curl -fsS \
              -H "Accept: application/vnd.github+json" \
              "${auth_header[@]}" \
              "https://api.github.com/repos/release-drafter/release-drafter/git/commits/${RELEASE_DRAFTER_ACTION_REF}" \
              > /dev/null; then
              exit 0
            fi
            if [ "${attempt}" -lt 5 ]; then
              sleep "${attempt}"
            fi
          done
          echo "Release Drafter ref ${RELEASE_DRAFTER_ACTION_REF} not found upstream." >&2
          exit 1

  update_release_draft:
    needs: validate_release_drafter_action
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Update release draft
        id: release_drafter_initial
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Wait before retrying draft update
        if: >-
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_initial.outcome)
        run: sleep 15
      - name: Retry release draft update
        if: >-
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_initial.outcome)
        id: release_drafter_retry
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail if release draft update still failing
        if: >-
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_initial.outcome) &&
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_retry.outcome)
        run: |
          echo 'Release Drafter failed twice; aborting.'
          exit 1

  autolabel_pull_request:
    needs: validate_release_drafter_action
    if: >-
      github.event_name == 'pull_request_target' &&
      github.event.pull_request != null &&
      github.event.pull_request.number != null
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Update pull request metadata
        id: release_drafter_pr_initial
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
          disable-releaser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Wait before retrying metadata update
        if: >-
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_pr_initial.outcome)
        run: sleep 15
      - name: Retry pull request metadata update
        if: >-
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_pr_initial.outcome)
        id: release_drafter_pr_retry
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        continue-on-error: true
        with:
          config-name: release-drafter.yml
          disable-releaser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail if pull request metadata update still failing
        if: >-
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_pr_initial.outcome) &&
          contains(fromJSON('["failure","cancelled"]'),
            steps.release_drafter_pr_retry.outcome)
        run: |
          echo 'Release Drafter metadata update failed twice; aborting.'
          exit 1
