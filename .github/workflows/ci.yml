name: CI

permissions:
  contents: read

# If a job fails with a temporary runner error, rerun the workflow.
# Self-hosted runners are also supported. When contacting GitHub Support
# include the correlation ID from the run's raw logs.

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

env:
  PYTHONPYCACHEPREFIX: /mnt/pycache
  TEST_MODE: "1"
  CSRF_SECRET: testsecret

jobs:
  unit:
    name: Unit tests
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        device: [cpu]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Audit dependencies
        working-directory: /mnt
        run: |
          pip-audit -f json -o pip-audit.json
      - name: Upload pip-audit report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: pip-audit-report
          path: /mnt/pip-audit.json
      - name: Run flake8
        run: |
          set -o pipefail
          flake8 . | tee flake8.log
      - name: Upload flake8 log
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: flake8-log
          path: flake8.log
      - name: Remove test caches
        run: |
          rm -rf /mnt/pytest_cache .pytest_cache .cache
          find . -type d -name '__pycache__' -exec rm -rf {} +
          find . -name '*.pyc' -delete
      - name: Run unit tests
        run: |
          set -o pipefail
          pytest -m "not integration" -o cache_dir=/mnt/pytest_cache | tee pytest.log
      - name: Upload unit test log
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: unit-test-log
          path: pytest.log
      - name: Cleanup buildx
        run: docker buildx prune -af || true

  integration:
    name: Integration tests
    runs-on: ubuntu-24.04
    needs: unit
    env:
      TEST_MODE: "1"
    strategy:
      matrix:
        device: [cpu]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Remove test caches
        run: |
          rm -rf /mnt/pytest_cache .pytest_cache .cache
          find . -type d -name '__pycache__' -exec rm -rf {} +
          find . -name '*.pyc' -delete
      - name: Run integration tests
        run: |
          set -o pipefail
          pytest -m integration -o cache_dir=/mnt/pytest_cache | tee pytest.log
      - name: Upload integration test log
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: integration-test-log
          path: pytest.log
      - name: Cleanup buildx
        run: docker buildx prune -af || true
