name: Submit package to PyPI

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-24.04
    env:
      TOKENPYPI: ${{ secrets.TOKENPYPI }}
    # Explicit permissions for OIDC-based publishing
      permissions:
        id-token: write
        contents: read
      steps:
        - name: Select branch
          id: select-branch
          run: |
            if git ls-remote --exit-code --heads https://github.com/${{ github.repository }}.git dependabot/pip/openai-1.102.0 >/dev/null; then
              echo "ref=dependabot/pip/openai-1.102.0" >> "$GITHUB_OUTPUT"
            else
              echo "ref=main" >> "$GITHUB_OUTPUT"
            fi
        - uses: actions/checkout@v5
          with:
            ref: ${{ steps.select-branch.outputs.ref }}
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
      - name: Clean Docker dir
        run: sudo rm -rf /var/lib/docker/*
      - name: Prepare build volume
        run: |
          if [ -e /dev/buildvg/buildlv ]; then
            sudo wipefs -a /dev/buildvg/buildlv || true
          else
            echo "Device /dev/buildvg/buildlv not found, skipping wipefs"
          fi
            sudo swapoff /mnt/swapfile || true
            sudo rm -f /mnt/swapfile || true
            sudo rm -rf /mnt/* || true
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 1024
          temp-reserve-mb: 100
          swap-size-mb: 4096
          build-mount-path: /mnt
          pv-loop-path: /root-pv.img
          tmp-pv-loop-path: /mnt/tmp-pv.img
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Create virtual environment
        run: |
          python -m venv /mnt/venv && source /mnt/venv/bin/activate
      - name: Add venv to PATH
        run: echo "/mnt/venv/bin" >> $GITHUB_PATH
      - name: Install build tools
        run: |
          source /mnt/venv/bin/activate
          python -m pip install --upgrade pip
          pip install build twine
      - name: Install pip-tools
        run: pip install pip-tools==7.5.0
      - name: Generate dependency lock
        run: |
          source /mnt/venv/bin/activate
          pip-compile --strip-extras -o requirements.out requirements.txt
      - name: Copy project to /mnt
        run: rsync -a . /mnt/project
      - name: Check dependencies
        working-directory: /mnt/project
        run: |
          source /mnt/venv/bin/activate
          pip-compile --dry-run -o requirements.out requirements.txt
      - name: Return generated files
        if: always()
        run: rsync -a /mnt/project/requirements.out requirements.out || true
      - name: Build package
        run: |
          source /mnt/venv/bin/activate
          python -m build
      - name: Publish to PyPI
        if: env.TOKENPYPI != ''
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ env.TOKENPYPI }}
          attestations: false
          skip-existing: true
      - name: Skip PyPI publish (missing token)
        if: env.TOKENPYPI == ''
        run: echo "TOKENPYPI not set; skipping publish."
      - name: Cleanup buildx
        run: docker buildx prune -af || true
