name: Submit package to PyPI

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-24.04
    # Explicit permissions for OIDC-based publishing
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
      - name: Clean Docker dir
        run: sudo rm -rf /var/lib/docker/*
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 1024
          temp-reserve-mb: 100
          swap-size-mb: 4096
          build-mount-path: /mnt
          pv-loop-path: /root-pv.img
          tmp-pv-loop-path: /mnt/tmp-pv.img
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Install pip-tools
        run: pip install pip-tools
      - name: Copy project to /mnt
        run: rsync -a . /mnt/project
      - name: Check dependencies
        working-directory: /mnt/project
        env:
          PIP_CACHE_DIR: /mnt/pip-cache
          TMPDIR: /mnt/tmp
        run: |
          set +e
          mkdir -p "$PIP_CACHE_DIR" "$TMPDIR"
          pip-compile --dry-run -o requirements.out requirements.txt
          status=$?
          if [ $status -eq 0 ]; then
            echo "Dependency check passed."
          else
            echo "Dependency check failed."
          fi
          exit $status
      - name: Return generated files
        if: always()
        run: |
          if [ -f /mnt/project/requirements.out ]; then
            rsync -a /mnt/project/requirements.out requirements.out
          fi
      - name: Build package
        run: python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
