name: CI CPU

on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:

env:
  CUDA_VISIBLE_DEVICES: ""
  GPT_OSS_API: http://127.0.0.1:8009
  GPT_OSS_TIMEOUT: 5

jobs:
  lint-type-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: pip install -r requirements-ci.txt
      - name: Start mock server
        run: |
          python - <<'PY' &
          from http.server import BaseHTTPRequestHandler, HTTPServer
          import json
          class Handler(BaseHTTPRequestHandler):
              def do_POST(self):
                  if self.path == '/v1/completions':
                      length = int(self.headers.get('Content-Length', 0))
                      self.rfile.read(length)
                      self.send_response(200)
                      self.send_header('Content-Type', 'application/json')
                      self.end_headers()
                      self.wfile.write(json.dumps({'choices': [{'text': 'ok'}]}).encode())
                  else:
                      self.send_response(404)
                      self.end_headers()
          HTTPServer(('127.0.0.1', 8009), Handler).serve_forever()
          PY
          sleep 1
      - name: Run flake8
        run: flake8 bot
      - name: Run mypy
        run: mypy bot
      - name: Run unit tests
        run: pytest --cov=. --cov-report=xml --cov-report=term-missing
      - name: Run integration tests
        run: pytest -m integration --cov=. --cov-append --cov-report=xml --cov-report=term-missing
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
