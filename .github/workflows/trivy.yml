# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '21 10 * * 2'

permissions:
  contents: read
  packages: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      packages: read # for docker login to ghcr.io
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Initial cleanup
        run: docker system prune -af && sudo rm -rf /tmp/*
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
        with:
          persist-credentials: false
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        continue-on-error: true
        with:
          docker-images: true
          swap-storage: true
      - name: Clean Docker dir
        run: sudo rm -rf /var/lib/docker/*
      - name: Prepare build volume
        run: |
          if [ -e /dev/buildvg/buildlv ]; then
            sudo wipefs -a /dev/buildvg/buildlv || true
          else
            echo "Device /dev/buildvg/buildlv not found, skipping wipefs"
          fi
          sudo rm -rf /mnt/*
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 1024
          temp-reserve-mb: 100
          swap-size-mb: 4096
          build-mount-path: /mnt
          pv-loop-path: /root-pv.img
          tmp-pv-loop-path: /mnt/tmp-pv.img
      - name: Build an image from Dockerfile.ci
        run: |
          docker build -f Dockerfile.ci -t ghcr.io/${{ github.repository }}:${{ github.sha }} .

      - name: Login to GHCR
        env:
          CR_PAT: ${{ secrets.TOKEN }}
        run: echo "$CR_PAT" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Cleanup before Trivy scan
        run: |
          sudo rm -rf /tmp/* || true
          sudo rm -rf /mnt/trivy-cache /mnt/trivy-temp || true
          rm -rf ~/.cache/trivy || true

      - name: Create Trivy directories
        run: |
          mkdir -p /mnt/trivy-cache
          mkdir -p /mnt/trivy-temp

      - name: Run Trivy vulnerability scanner
        env:
          TRIVY_CACHE_DIR: /mnt/trivy-cache
          TRIVY_TEMP_DIR: /mnt/trivy-temp
        uses: aquasecurity/trivy-action@0.32.0
        with:
          cache-dir: /mnt/trivy-cache
          image-ref: ghcr.io/${{ github.repository }}:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          # ignore-unlikely-affected: true  # enable once Trivy >= v0.66 is available
          limit-severities-for-sarif: CRITICAL
          scanners: vuln

      - name: Show Trivy scan results
        run: cat trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@d6c5e1b140009be28958d3837ed3be3fb637d8c0 # v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload Trivy report artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif
      - name: Cleanup after Trivy scan
        run: |
          rm -rf /mnt/trivy-cache /mnt/trivy-temp ~/.cache/trivy || true
          sudo rm -rf /tmp/* || true
