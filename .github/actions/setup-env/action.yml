name: Setup environment
description: Prepare Python environment with cached dependencies
inputs:
  python-version:
    description: Python version to use
    required: true
  device:
    description: Target device
runs:
  using: composite
  steps:
    - name: Initial cleanup
      shell: bash
      run: rm -rf build/
    - name: Cleanup git submodules
      shell: bash
      run: >-
        git submodule foreach --recursive sh -c "git config --quiet --local gc.auto 0 || :" || :
    - name: Free disk space
      shell: bash
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo npm cache clean --force || true
        sudo rm -rf /var/lib/docker/*
      timeout-minutes: 4
      continue-on-error: true
    - name: Prepare build volume
      shell: bash
      run: |
        if [ -e /dev/buildvg/buildlv ]; then
          sudo wipefs -a /dev/buildvg/buildlv
        else
          echo "Device /dev/buildvg/buildlv not found, skipping wipefs"
        fi
        sudo swapoff /mnt/swapfile || true
        sudo rm -f /mnt/swapfile
        sudo rm -rf /mnt/*
    - name: Maximize build space
      uses: easimon/maximize-build-space@v10
      with:
        root-reserve-mb: 1024
        temp-reserve-mb: 100
        swap-size-mb: 4096
        build-mount-path: /mnt
        pv-loop-path: /root-pv.img
        tmp-pv-loop-path: /mnt/tmp-pv.img
    - name: Configure temp directories
      shell: bash
      working-directory: /mnt
      run: |
        mkdir -p /mnt/tmp /mnt/pip-cache
        echo "TMPDIR=/mnt/tmp" >> $GITHUB_ENV
        echo "PIP_CACHE_DIR=/mnt/pip-cache" >> $GITHUB_ENV
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: ${{ inputs.python-version }}
    - name: Get pip cache dir
      id: pip-cache
      shell: bash
      run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
    - name: Cache pip wheels
      uses: actions/cache@638ed79f9dc94c1de1baef91bcab5edaa19451f4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ inputs.device }}-py${{ inputs.python-version }}-${{ hashFiles('requirements-ci.txt', 'requirements-cpu.txt') }}
    - name: Cache virtualenv
      id: cache-venv
      uses: actions/cache@638ed79f9dc94c1de1baef91bcab5edaa19451f4
      with:
        path: /mnt/venv
        key: ${{ runner.os }}-venv-${{ inputs.device }}-py${{ inputs.python-version }}-${{ hashFiles('requirements-ci.txt', 'requirements-cpu.txt') }}
    - name: Set up virtual environment
      shell: bash
      run: |
        if [ ! -f /mnt/venv/bin/activate ]; then
          python -m venv /mnt/venv
          source /mnt/venv/bin/activate
          mkdir -p /mnt/tmp /mnt/pip-cache
          export TMPDIR=/mnt/tmp
          export PIP_CACHE_DIR=/mnt/pip-cache
          python -m pip install -r requirements-ci.txt -r requirements-cpu.txt
        fi
        echo "/mnt/venv/bin" >> $GITHUB_PATH
