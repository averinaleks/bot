# Python 3.12 slim already ships with patched setuptools (>=80.9.0), eliminating
# CVE-2024-6345 / CVE-2025-47273 flagged by Trivy в предыдущем Python 3.11
# образе. pip>=25.2 доступен на момент написания; далее мы патчим установленный
# pip, добавляя проверку символических ссылок из релиза 25.3 (CVE-2025-8869).
FROM python:3.12-slim

ENV PYTHONUNBUFFERED=1 HF_HOME=/workspace/hf-cache
ENV VLLM_DEVICE=cpu VLLM_LOGGING_LEVEL=DEBUG

RUN apt-get update \
    && apt-get install -y --no-install-recommends curl \
    && python -m ensurepip --upgrade \
    && python -m pip install --no-cache-dir 'pip>=25.2' 'setuptools>=80.9.0,<81' wheel \
    && python - <<'PY'
from __future__ import annotations

import os
import tarfile
from pathlib import Path

import pip

unpacking = Path(pip.__file__).resolve().parent / "_internal" / "utils" / "unpacking.py"
text = unpacking.read_text()

if "def is_symlink_target_in_tar(" not in text:
    helper = (
        "\n\n"
        "def is_symlink_target_in_tar(tar: tarfile.TarFile, tarinfo: tarfile.TarInfo) -> bool:\n"
        "    \"\"\"Check if the file pointed to by the symbolic link is in the tar archive.\"\"\"\n"
        "    linkname = os.path.join(os.path.dirname(tarinfo.name), tarinfo.linkname)\n"
        "    linkname = os.path.normpath(linkname)\n"
        "    linkname = linkname.replace(\\"\\\\\\", \\\"/\\")\n"
        "    try:\n"
        "        tar.getmember(linkname)\n"
        "        return True\n"
        "    except KeyError:\n"
        "        return False\n"
        "\n"
    )
    text = text.replace("def _untar_without_filter(", helper + "def _untar_without_filter(", 1)

    sentinel = '    """Fallback for Python without tarfile.data_filter"""\n'
    comment = (
        "    # NOTE: This function can be removed once pip requires CPython ≥ 3.12.\n"
        "    # PEP 706 added tarfile.data_filter, made tarfile extraction operations more secure.\n"
        "    # This feature is fully supported from CPython 3.12 onward.\n"
    )
    if sentinel + "    for member" not in text:
        raise SystemExit("unexpected pip layout: missing fallback header")
    text = text.replace(sentinel + "    for member", sentinel + comment + "    for member", 1)

    old_block = (
        "        elif member.issym():\n"
        "            try:\n"
        "                tar._extract_member(member, path)\n"
    )
    new_block = (
        "        elif member.issym():\n"
        "            if not is_symlink_target_in_tar(tar, member):\n"
        "                message = (\n"
        "                    \"The tar file ({}) has a file ({}) trying to install \"\n"
        "                    \"outside target directory ({})\"\n"
        "                )\n"
        "                raise InstallationError(\n"
        "                    message.format(filename, member.name, member.linkname)\n"
        "                )\n"
        "            try:\n"
        "                tar._extract_member(member, path)\n"
    )
    if old_block not in text:
        raise SystemExit("unexpected pip layout: missing symlink branch")
    text = text.replace(old_block, new_block, 1)

    unpacking.write_text(text)
PY \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd --system bot \
    && useradd --system --gid bot --home-dir /home/bot --shell /bin/bash bot \
    && mkdir -p /home/bot \
    && chown -R bot:bot /home/bot

COPY scripts/gptoss_mock_server.py /usr/local/bin/gptoss_mock_server.py
RUN chown bot:bot /usr/local/bin/gptoss_mock_server.py

USER bot

EXPOSE 8000

CMD ["python", "/usr/local/bin/gptoss_mock_server.py", "--host", "0.0.0.0", "--port", "8000"]


