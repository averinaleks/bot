# syntax=docker/dockerfile:1

# -------- Builder stage --------
# Используем публичный LTS-образ Ubuntu для сборки зависимостей
FROM ubuntu:24.04@sha256:985be7c735afdf6f18aaa122c23f87d989c30bba4e9aa24c8278912aac339a8d AS builder

ARG DEBIAN_FRONTEND=noninteractive

# Обновление linux-libc-dev устраняет CVE-2025-21976, а libgcrypt20 — CVE-2024-2236.
# Дополнительно выполняем upgrade, чтобы подтянуть свежие патчи безопасности из Ubuntu.
RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \
    python3 python3-venv build-essential linux-libc-dev libgcrypt20 git patch \
    && apt-get install -y --no-install-recommends gnupg dirmngr \
    && python3 -m venv /venv \
    && apt-get purge -y --auto-remove build-essential \
    && apt-get clean && rm -rf /var/lib/apt/lists/* \
    && ldconfig \
    && gpg --version \
    && dirmngr --version

COPY docker/patches/linux-pam-CVE-2024-10963.patch /tmp/security/linux-pam-CVE-2024-10963.patch
COPY docker/patches/linux-pam-CVE-2024-10041.patch /tmp/security/linux-pam-CVE-2024-10041.patch
COPY docker/scripts/update_pam_changelog.py /tmp/security/update_pam_changelog.py
COPY docker/scripts/build_patched_pam.sh /tmp/security/build_patched_pam.sh

RUN /tmp/security/build_patched_pam.sh "/tmp/security/linux-pam-CVE-2024-10963.patch /tmp/security/linux-pam-CVE-2024-10041.patch" \
    /tmp/security/update_pam_changelog.py noble /tmp/security/pam-build /tmp/pam-fixed

WORKDIR /app


# Copy files required for static analysis
COPY .pre-commit-config.yaml .flake8 .pylintrc requirements-core.txt requirements-gpu.txt ./
COPY *.py ./
COPY scripts scripts
COPY services services
COPY tests tests

# -------- Runtime stage --------
FROM ubuntu:24.04@sha256:985be7c735afdf6f18aaa122c23f87d989c30bba4e9aa24c8278912aac339a8d AS runtime

ARG DEBIAN_FRONTEND=noninteractive

COPY --from=builder /tmp/pam-fixed /tmp/pam-fixed

# Устанавливаем только необходимые пакеты выполнения и сразу обновляем базовую систему
RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \
    libssl3t64 \
    python3.12-minimal \
    openssl \
    && dpkg -i /tmp/pam-fixed/*.deb \
    && rm -rf /tmp/pam-fixed \
    && apt-get purge -y git \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Копируем только нужные артефакты из builder
COPY --from=builder /venv /venv
COPY --from=builder /app /app

ENV PATH="/venv/bin:$PATH"

# Run as a dedicated non-root user inside the CI container
RUN groupadd --system bot && useradd --system --gid bot --home-dir /home/bot --shell /bin/bash bot \
    && mkdir -p /home/bot \
    && chown -R bot:bot /app /home/bot /venv

USER bot

CMD ["bash"]

