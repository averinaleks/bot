# syntax=docker/dockerfile:1

# -------- Builder stage --------
# Используем публичный LTS-образ Ubuntu для сборки зависимостей
FROM ubuntu:noble-20250716 AS builder

ARG DEBIAN_FRONTEND=noninteractive
ENV PIP_BREAK_SYSTEM_PACKAGES=1

# Обновление linux-libc-dev устраняет CVE-2025-21976, а libgcrypt20 — CVE-2024-2236
RUN apt-get update && apt-get install --no-install-recommends -y \
    linux-libc-dev=6.8.0-78.78 \
    libgcrypt20=1.10.3-2build1 \
    libpam0g=1.5.3-5ubuntu5.4 \
    libssl3t64=3.0.13-0ubuntu3.5 \
    python3.12-minimal=3.12.3-1ubuntu0.8 \
    zlib1g-dev=1:1.3.dfsg-3.1ubuntu2 \
    build-essential=12.10ubuntu1 \
    python3=3.12.3-0ubuntu1 \
    python3-dev=3.12.3-0ubuntu1 \
    python3-venv=3.12.3-0ubuntu1 \
    python3-pip=24.0+dfsg-1ubuntu1 \
    && python3 -m venv /venv \
    && /venv/bin/python -m pip install --no-cache-dir --upgrade --break-system-packages pip==25.2 \
    && find / -xdev -type l -lname "*..*" -print \
    && apt-get purge -y --auto-remove build-essential \
    && apt-get clean && rm -rf /var/lib/apt/lists/* \
    && ldconfig

WORKDIR /app


# Copy files required for static analysis
COPY .pre-commit-config.yaml .flake8 .pylintrc requirements-core.txt requirements-gpu.txt ./
COPY *.py ./
COPY scripts scripts
COPY services services
COPY tests tests

# -------- Runtime stage --------
FROM ubuntu:noble-20250716 AS runtime

ARG DEBIAN_FRONTEND=noninteractive
ENV PIP_BREAK_SYSTEM_PACKAGES=1

# Устанавливаем только необходимые пакеты выполнения
RUN apt-get update && apt-get install --no-install-recommends -y \
    libssl3t64=3.0.13-0ubuntu3.5 \
    python3.12-minimal=3.12.3-1ubuntu0.8 \
    python3=3.12.3-0ubuntu1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Копируем только нужные артефакты из builder
COPY --from=builder /venv /venv
COPY --from=builder /app /app

ENV PATH="/venv/bin:$PATH"

