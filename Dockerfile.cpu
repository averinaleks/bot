FROM ubuntu:noble AS builder
ARG DEBIAN_FRONTEND=noninteractive

# Обновление linux-libc-dev устраняет CVE-2025-21976, а libgcrypt20 — CVE-2024-2236
RUN apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \
    linux-libc-dev \
    libpam0g \
    libssl3t64 \
    python3.12-minimal \
    build-essential \
    curl \
    python3 python3-venv python3-dev \
    zlib1g-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY requirements-core.txt .

ENV VIRTUAL_ENV=/app/venv
RUN python3 -m venv $VIRTUAL_ENV && \
    # pip >=25.2 и устраняет CVE-2023-32681
    $VIRTUAL_ENV/bin/pip install --no-cache-dir pip==25.2 'setuptools<81' wheel && \
    $VIRTUAL_ENV/bin/pip install --no-cache-dir --extra-index-url https://download.pytorch.org/whl/cpu -r requirements-core.txt && \
    $VIRTUAL_ENV/bin/pip freeze | grep -i '^nvidia-' | cut -d= -f1 | xargs -r $VIRTUAL_ENV/bin/pip uninstall -y && \
    find $VIRTUAL_ENV -type d -name '__pycache__' -exec rm -rf {} + && \
    find $VIRTUAL_ENV -type f -name '*.pyc' -delete

FROM ubuntu:noble

# Установка минимальных пакетов выполнения
RUN apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \
    libssl3t64 \
    python3.12-minimal \
    curl \
    python3 \
    && apt-get clean && rm -rf /var/lib/apt/lists/* \
    && python3 --version

WORKDIR /app

COPY --from=builder /app/venv /app/venv
COPY . .

ENV VIRTUAL_ENV=/app/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Verify that all heavy packages were installed and no GPU libraries remain
RUN echo "Checking package versions..." && \
    $VIRTUAL_ENV/bin/python -c "import torch, tensorflow as tf; print('Torch:', torch.__version__, 'TF:', tf.__version__)" && \
    if /app/venv/bin/pip freeze | grep -qi nvidia; then echo 'Unexpected NVIDIA packages found' >&2; exit 1; else echo 'No NVIDIA packages installed'; fi && \
    $VIRTUAL_ENV/bin/python -c "import stable_baselines3 as sb3, mlflow, pytorch_lightning as pl; print('SB3:', sb3.__version__, 'MLflow:', mlflow.__version__, 'Lightning:', pl.__version__)"

CMD ["/app/venv/bin/python", "-m", "bot.trading_bot"]
