import os
import time
import requests
from requests.exceptions import RequestException


def query(prompt: str) -> str:
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä GPT-OSS –∏ –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç."""
    api_url = os.getenv("GPT_OSS_API")
    if not api_url:
        raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è GPT_OSS_API –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

    max_retries = 3
    backoff = 1
    for attempt in range(1, max_retries + 1):
        try:
            response = requests.post(
                api_url.rstrip("/") + "/completions",
                json={"prompt": prompt, "max_tokens": 1024},
                timeout=30,
            )
            response.raise_for_status()
            return response.json()["choices"][0]["text"]
        except RequestException as err:
            if attempt == max_retries:
                raise RuntimeError(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ GPT-OSS API: {err}") from err
            time.sleep(backoff)
            backoff *= 2


def send_telegram(msg: str) -> None:
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω—ã —Ç–æ–∫–µ–Ω –∏ chat_id."""
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")
    if token and chat_id:
        requests.post(
            f"https://api.telegram.org/bot{token}/sendMessage",
            data={"chat_id": chat_id, "text": msg[:4000]},
            timeout=15,
        )


# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
files = ("main.py", "strategy.py", "utils.py")

for filename in files:
    path = f"/repo/{filename}"
    if os.path.exists(path):
        with open(path, encoding="utf-8") as f:
            code = f.read()

        prompt = (
            "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–¥ Python. –í—ã—è–≤–∏ –æ—à–∏–±–∫–∏, —É—è–∑–≤–∏–º–æ—Å—Ç–∏, —É–ª—É—á—à–µ–Ω–∏—è. "
            "–û–±—ä—è—Å–Ω–∏ —Å–∏–≥–Ω–∞–ª—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:\n" + code
        )
        try:
            result = query(prompt)
        except RuntimeError as err:
            print(f"\nüìÑ {filename}\n{err}\n")
            send_telegram(f"üìÑ {filename}\n{err}")
            continue

        print(f"\nüìÑ {filename}\n{result}\n")
        send_telegram(f"üìÑ {filename}\n{result}")
